#!/usr/bin/env python3
"""
Script ƒë·ªÉ xem v√† ph√¢n t√≠ch d·ªØ li·ªáu webhook ƒë√£ l∆∞u trong MongoDB
"""

import requests
import json
from datetime import datetime

def view_webhooks():
    """Xem danh s√°ch webhooks"""
    print("üìã Danh s√°ch webhooks ƒë√£ nh·∫≠n:")
    print("=" * 60)
    
    try:
        response = requests.get("http://localhost:5000/webhooks?limit=10")
        if response.status_code == 200:
            data = response.json()
            webhooks = data.get('webhooks', [])
            
            if not webhooks:
                print("[ERROR] Ch∆∞a c√≥ webhook n√†o ƒë∆∞·ª£c nh·∫≠n")
                return
            
            for i, webhook in enumerate(webhooks, 1):
                print(f"\nüî∏ Webhook #{i}")
                print(f"   Th·ªùi gian: {webhook.get('timestamp', 'N/A')}")
                print(f"   Lo·∫°i: {webhook.get('webhook_type', 'N/A')}")
                
                if webhook.get('webhook_type') == 'inbound_email':
                    email_data = webhook.get('email_data', {})
                    print(f"   T·ª´: {email_data.get('from', 'N/A')}")
                    print(f"   ƒê·∫øn: {email_data.get('to', 'N/A')}")
                    print(f"   Ti√™u ƒë·ªÅ: {email_data.get('subject', 'N/A')}")
                    print(f"   S·ªë file ƒë√≠nh k√®m: {email_data.get('attachment_count', '0')}")
                    
                    # Hi·ªÉn th·ªã n·ªôi dung email (r√∫t g·ªçn)
                    body_plain = email_data.get('body_plain', '')
                    if body_plain:
                        preview = body_plain[:100] + "..." if len(body_plain) > 100 else body_plain
                        print(f"   N·ªôi dung: {preview}")
                
                elif webhook.get('webhook_type') == 'email_event':
                    print(f"   Event: {webhook.get('event_type', 'N/A')}")
                    print(f"   Message ID: {webhook.get('message_id', 'N/A')}")
                    print(f"   Recipient: {webhook.get('recipient', 'N/A')}")
                
                print("-" * 40)
        else:
            print(f"[ERROR] L·ªói: {response.status_code}")
            print(response.text)
            
    except Exception as e:
        print(f"[ERROR] L·ªói k·∫øt n·ªëi: {e}")

def view_webhook_detail(webhook_id):
    """Xem chi ti·∫øt m·ªôt webhook"""
    print(f"[SEARCH] Chi ti·∫øt webhook ID: {webhook_id}")
    print("=" * 60)
    
    try:
        response = requests.get(f"http://localhost:5000/webhook/{webhook_id}")
        if response.status_code == 200:
            data = response.json()
            webhook = data.get('webhook', {})
            
            print(f"Th·ªùi gian: {webhook.get('timestamp', 'N/A')}")
            print(f"Lo·∫°i webhook: {webhook.get('webhook_type', 'N/A')}")
            print(f"IP: {webhook.get('ip_address', 'N/A')}")
            print(f"User Agent: {webhook.get('user_agent', 'N/A')}")
            
            if webhook.get('webhook_type') == 'inbound_email':
                email_data = webhook.get('email_data', {})
                print(f"\nüìß Th√¥ng tin Email:")
                print(f"   T·ª´: {email_data.get('from', 'N/A')}")
                print(f"   ƒê·∫øn: {email_data.get('to', 'N/A')}")
                print(f"   Ti√™u ƒë·ªÅ: {email_data.get('subject', 'N/A')}")
                print(f"   Message ID: {email_data.get('message_id', 'N/A')}")
                print(f"   Timestamp: {email_data.get('timestamp', 'N/A')}")
                print(f"   Token: {email_data.get('token', 'N/A')}")
                print(f"   Signature: {email_data.get('signature', 'N/A')}")
                
                print(f"\nüìÑ N·ªôi dung:")
                print(f"   Plain text: {email_data.get('body_plain', 'N/A')}")
                print(f"   HTML content: {email_data.get('body_html', 'N/A')}")
                print(f"   Stripped text: {email_data.get('stripped_text', 'N/A')}")
                print(f"   Stripped HTML: {email_data.get('stripped_html', 'N/A')}")
                print(f"   Stripped signature: {email_data.get('stripped_signature', 'N/A')}")
                
                # Hi·ªÉn th·ªã attachments
                attachments = email_data.get('attachments', [])
                if attachments:
                    print(f"\nüìé File ƒë√≠nh k√®m:")
                    for i, attachment in enumerate(attachments, 1):
                        print(f"   {i}. {attachment.get('name', 'N/A')}")
                        print(f"      K√≠ch th∆∞·ªõc: {attachment.get('size', 'N/A')} bytes")
                        print(f"      Lo·∫°i: {attachment.get('content_type', 'N/A')}")
            
            elif webhook.get('webhook_type') == 'email_event':
                print(f"\nüìä Th√¥ng tin Event:")
                print(f"   Event type: {webhook.get('event_type', 'N/A')}")
                print(f"   Message ID: {webhook.get('message_id', 'N/A')}")
                print(f"   Recipient: {webhook.get('recipient', 'N/A')}")
                print(f"   Domain: {webhook.get('domain', 'N/A')}")
            
            print(f"\nüìã Raw data:")
            print(json.dumps(webhook.get('form_data', {}), indent=2, ensure_ascii=False))
            
        elif response.status_code == 404:
            print("[ERROR] Kh√¥ng t√¨m th·∫•y webhook v·ªõi ID n√†y")
        else:
            print(f"[ERROR] L·ªói: {response.status_code}")
            print(response.text)
            
    except Exception as e:
        print(f"[ERROR] L·ªói k·∫øt n·ªëi: {e}")

def get_statistics():
    """L·∫•y th·ªëng k√™ webhooks"""
    print("[STATS] Th·ªëng k√™ webhooks:")
    print("=" * 60)
    
    try:
        response = requests.get("http://localhost:5000/webhooks?limit=1000")
        if response.status_code == 200:
            data = response.json()
            webhooks = data.get('webhooks', [])
            
            if not webhooks:
                print("[ERROR] Ch∆∞a c√≥ webhook n√†o")
                return
            
            # Th·ªëng k√™ theo lo·∫°i
            inbound_count = sum(1 for w in webhooks if w.get('webhook_type') == 'inbound_email')
            event_count = sum(1 for w in webhooks if w.get('webhook_type') == 'email_event')
            
            print(f"T·ªïng s·ªë webhooks: {len(webhooks)}")
            print(f"  - Inbound emails: {inbound_count}")
            print(f"  - Email events: {event_count}")
            
            # Th·ªëng k√™ events
            if event_count > 0:
                event_types = {}
                for w in webhooks:
                    if w.get('webhook_type') == 'email_event':
                        event_type = w.get('event_type', 'unknown')
                        event_types[event_type] = event_types.get(event_type, 0) + 1
                
                print(f"\n[CHART] Chi ti·∫øt events:")
                for event_type, count in event_types.items():
                    print(f"  - {event_type}: {count}")
            
            # Th·ªëng k√™ domains
            domains = {}
            for w in webhooks:
                if w.get('webhook_type') == 'inbound_email':
                    domain = w.get('email_data', {}).get('domain', 'unknown')
                    domains[domain] = domains.get(domain, 0) + 1
                elif w.get('webhook_type') == 'email_event':
                    domain = w.get('domain', 'unknown')
                    domains[domain] = domains.get(domain, 0) + 1
            
            if domains:
                print(f"\n[WEB] Domains:")
                for domain, count in domains.items():
                    print(f"  - {domain}: {count}")
            
        else:
            print(f"[ERROR] L·ªói: {response.status_code}")
            
    except Exception as e:
        print(f"[ERROR] L·ªói k·∫øt n·ªëi: {e}")

def view_emails_by_recipient():
    """Xem emails theo ng∆∞·ªùi nh·∫≠n"""
    print("[EMAIL] Xem emails theo ng∆∞·ªùi nh·∫≠n:")
    print("=" * 60)
    
    recipient = input("Nh·∫≠p email ng∆∞·ªùi nh·∫≠n: ").strip()
    if not recipient:
        print("[ERROR] Vui l√≤ng nh·∫≠p email")
        return
    
    try:
        response = requests.get(f"http://localhost:5000/emails/search?to={recipient}&limit=10")
        if response.status_code == 200:
            data = response.json()
            emails = data.get('emails', [])
            
            if not emails:
                print(f"[ERROR] Kh√¥ng t√¨m th·∫•y emails cho {recipient}")
                return
            
            print(f"\n[EMAIL] T√¨m th·∫•y {len(emails)} emails cho {recipient}:")
            for i, email in enumerate(emails, 1):
                email_data = email.get('email_data', {})
                print(f"\n[ITEM] Email #{i}")
                print(f"   ID: {email.get('_id', 'N/A')}")
                print(f"   Th·ªùi gian: {email.get('timestamp', 'N/A')}")
                print(f"   T·ª´: {email_data.get('from', 'N/A')}")
                print(f"   Ti√™u ƒë·ªÅ: {email_data.get('subject', 'N/A')}")
                print(f"   S·ªë file ƒë√≠nh k√®m: {email_data.get('attachment_count', '0')}")
                
                # Hi·ªÉn th·ªã n·ªôi dung email (r√∫t g·ªçn)
                body_plain = email_data.get('body_plain', '')
                body_html = email_data.get('body_html', '')
                if body_plain:
                    preview = body_plain[:100] + "..." if len(body_plain) > 100 else body_plain
                    print(f"   N·ªôi dung (text): {preview}")
                if body_html:
                    # Lo·∫°i b·ªè HTML tags ƒë·ªÉ hi·ªÉn th·ªã text
                    import re
                    html_text = re.sub('<[^<]+?>', '', body_html)
                    preview = html_text[:100] + "..." if len(html_text) > 100 else html_text
                    print(f"   N·ªôi dung (HTML): {preview}")
                
                print("-" * 40)
        else:
            print(f"[ERROR] L·ªói: {response.status_code}")
            print(response.text)
            
    except Exception as e:
        print(f"[ERROR] L·ªói k·∫øt n·ªëi: {e}")

def view_inbox(recipient):
    """Xem inbox c·ªßa m·ªôt ng∆∞·ªùi nh·∫≠n"""
    print(f"[EMAIL] Inbox c·ªßa {recipient}:")
    print("=" * 60)
    
    # H·ªèi v·ªÅ subject filter
    subject_filter = input("Nh·∫≠p subject filter (m·∫∑c ƒë·ªãnh 'verification code'): ").strip()
    if not subject_filter:
        subject_filter = "verification code"
        print(f"[SEARCH] S·ª≠ d·ª•ng subject filter m·∫∑c ƒë·ªãnh: '{subject_filter}'")
    else:
        print(f"[SEARCH] S·ª≠ d·ª•ng subject filter t√πy ch·ªânh: '{subject_filter}'")
    
    try:
        url = f"http://localhost:5000/emails/inbox/{recipient}?limit=10&subject={subject_filter}"
        
        response = requests.get(url)
        if response.status_code == 200:
            html_content = response.text
            print(f"\n[EMAIL] Nh·∫≠n ƒë∆∞·ª£c HTML content:")
            print(f"   Content-Type: {response.headers.get('Content-Type', 'N/A')}")
            print(f"   Length: {len(html_content)} k√Ω t·ª±")
            print(f"   Subject filter: '{subject_filter}'")
            
            # Hi·ªÉn th·ªã preview HTML content
            if html_content:
                # Lo·∫°i b·ªè HTML tags ƒë·ªÉ hi·ªÉn th·ªã text preview
                import re
                html_text = re.sub('<[^<]+?>', '', html_content)
                preview = html_text[:200] + "..." if len(html_text) > 200 else html_text
                print(f"   Preview: {preview}")
                
                # ƒê·∫øm s·ªë l∆∞·ª£ng email HTML (d·ª±a tr√™n s·ªë l∆∞·ª£ng div ho·∫∑c p tags)
                div_count = html_content.count('<div')
                p_count = html_content.count('<p')
                print(f"   Estimated emails: {max(div_count, p_count)}")
        elif response.status_code == 404:
            print(f"[ERROR] Kh√¥ng t√¨m th·∫•y emails v·ªõi HTML content cho {recipient} v·ªõi subject filter '{subject_filter}'")
        else:
            print(f"[ERROR] L·ªói: {response.status_code}")
            print(response.text)
            
    except Exception as e:
        print(f"[ERROR] L·ªói k·∫øt n·ªëi: {e}")

def main():
    """Menu ch√≠nh"""
    while True:
        print("\n" + "=" * 60)
        print("üîß Mailgun Webhook Viewer")
        print("=" * 60)
        print("1. Xem danh s√°ch webhooks")
        print("2. Xem chi ti·∫øt webhook")
        print("3. T√¨m ki·∫øm emails theo ng∆∞·ªùi nh·∫≠n")
        print("4. Xem inbox c·ªßa m·ªôt ng∆∞·ªùi nh·∫≠n")
        print("5. Th·ªëng k√™")
        print("6. Tho√°t")
        
        choice = input("\nCh·ªçn t√πy ch·ªçn (1-6): ").strip()
        
        if choice == '1':
            view_webhooks()
        elif choice == '2':
            webhook_id = input("Nh·∫≠p webhook ID: ").strip()
            if webhook_id:
                view_webhook_detail(webhook_id)
            else:
                print("[ERROR] Vui l√≤ng nh·∫≠p webhook ID")
        elif choice == '3':
            view_emails_by_recipient()
        elif choice == '4':
            recipient = input("Nh·∫≠p email ng∆∞·ªùi nh·∫≠n: ").strip()
            if recipient:
                view_inbox(recipient)
            else:
                print("[ERROR] Vui l√≤ng nh·∫≠p email")
        elif choice == '5':
            get_statistics()
        elif choice == '6':
            print("üëã T·∫°m bi·ªát!")
            break
        else:
            print("[ERROR] L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá")

if __name__ == "__main__":
    main() 